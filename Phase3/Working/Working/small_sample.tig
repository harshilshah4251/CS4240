type Mat33 = array[3][3] of fixedpt;
type decimal = fixedpt;

void main() 
begin
	begin
	var C : Mat33 := 0; /*0 initialization*/
	var Cheight, Cwidth : int;
	var A, B : Mat33 := 0;
	var Aheight : int := 3;
	var Awidth : int := 3;
	var Bheight : int := 3;
	var Bwidth : int := 3;
	var check_size_result : int;
	var i,j,dindex : int :=0;

        /*A={{1,2,3},{4,5,6},{7,8,9}};*/
	/*B={{4,5,2},{1,1,1},{2,1,2}};*/

	A[0][0]:=1;
	A[0][1]:=2.022;
	A[0][2]:=3.1;
	A[1][0]:=4.4;
	A[1][1]:=5;
	A[1][2]:=6;
	A[2][0]:=7.10;
	A[2][1]:=8;
	A[2][2]:=9;

	B[0][0]:=4.1;
	B[0][1]:=5;
	B[0][2]:=2;
	B[1][0]:=1.9;
	B[1][1]:=0.123;
	B[1][2]:=1.22;
	B[2][0]:=2.232;
	B[2][1]:=0;
	B[2][2]:=0.0;

	
	if(check_size_result = 0) then
		i := 3; /*matrices are of incorrect size to multiply*/
	endif;


	for j := 0 to Bwidth-1 do
		for i := 0 to Aheight-1 do
			C[i][j]:=0;
			for dindex := 0 to Aheight-1 do
				C[i][j] := C[i][j] + A[i][dindex] * B[dindex][j];
			enddo;
		enddo;
	enddo;

	/* then, let's compute elementwise sqrt of C because we can */
	Cheight := Aheight;
	Cwidth := Bwidth;

	/* finally, let's output elements of C */
	for i := 0 to Cheight-1 do
		for j := 0 to Cwidth-1 do
			/* printi(C[i][j]); */
			i := 3;
		enddo;
	enddo;


  end;
end;
