Symbol table 0: 
level : 0
{print=Function/ return: void, size: 0, parameter list:[ ID/string, size: 0, init: false, size: 0
], number of parameters: 1
, printi=Function/ return: void, size: 0, parameter list:[ ID/int, size: 4, init: false, size: 4
], number of parameters: 1
, ord=Function/ return: int, size: 4, parameter list:[ ID/string, size: 0, init: false, size: 0
], number of parameters: 1
, exit=Function/ return: void, size: 0, parameter list:[ ID/int, size: 4, init: false, size: 4
], number of parameters: 1
, not=Function/ return: int, size: 4, parameter list:[ ID/int, size: 4, init: false, size: 4
], number of parameters: 1
, chr=Function/ return: string, size: 0, parameter list:[ ID/int, size: 4, init: false, size: 4
], number of parameters: 1
, myownarr=UserType/ Name: int TotalSize : 8 BaseType : [8] int, size: 4
, myownint=UserType/ Name: int TotalSize : 4 BaseType : int, size: 4
, substring=Function/ return: string, size: 0, parameter list:[ ID/string, size: 0, init: false, size: 0
,  ID/int, size: 4, init: false, size: 4
,  ID/int, size: 4, init: false, size: 4
], number of parameters: 3
, myownfunc=Function/ return: int, size: 4, parameter list:[], number of parameters: 0
, getchar=Function/ return: string, size: 0, parameter list:[], number of parameters: 0
, concat=Function/ return: string, size: 0, parameter list:[ ID/string, size: 0, init: false, size: 0
,  ID/string, size: 0, init: false, size: 0
], number of parameters: 2
, flush=Function/ return: void, size: 0, parameter list:[], number of parameters: 0
, size=Function/ return: int, size: 4, parameter list:[ ID/string, size: 0, init: false, size: 0
], number of parameters: 1
}

Symbol table 2: 
level : 2
{x= ID/int, size: 4, init: true, size: 4
}

Symbol table 3: 
level : 2
{a= ID/myownarr, size: 0, init: true, size: 0
}

Symbol table 4: 
level : 1
{b= ID/int, size: 4, init: true, size: 4
, d= ID/float, size: 8, init: true, size: 8
, c= ID/float, size: 8, init: true, size: 8
}

